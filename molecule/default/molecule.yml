dependency:
  name: galaxy
driver:
  name: vagrant
  provider:
    name: libvirt
    type: libvirt
platforms:
  - name: instance
    box: centos/8
    memory: 512
    cpus: 1
    instance_raw_config_args:
      - vagrant.plugins = ["vagrant-libvirt"]
    config_options:
      ssh.keep_alive: yes
      ssh.remote_user: "'vagrant'"
      synced_folder: false
    interfaces:
      - network_name: forwarded_port
        guest: 80
        host: 8080
    provision: no
provisioner:
  name: ansible
  inventory:
    group_vars:
      all:
        # psql vars
        psql_hba_conf_file: ${MOLECULE_PROJECT_DIRECTORY}/molecule/files/pg_hba.conf
        # msb vars
        mbs_env: stg
        mbs_default_modules_dir: ${MOLECULE_PROJECT_DIRECTORY}/molecule/files/default-modules
        mbs_frontend_https_enabled: false
        mbs_frontend_http_enabled: true
        mbs_config_no_auth: true
        # fedmsg vars
        fedmsg_buildtools_repo_name: BuildTools
        fedmsg_buildtools_repo_baseurl: http://buildlogs.centos.org/centos/8/infra/x86_64/buildtools-common/
        fedmsg_buildtools_repo_enabled: 1
        fedmsg_buildtools_repo_gpgcheck:  0
        fedmsg_hub_bin: /usr/bin/fedmsg-hub
        fedmsg_env: stg
        fedmsg_log_level: DEBUG
        fedmsg_hub_memory_limit_mb: 300
        fedmsg_hub_auto_restart: false
        fedmsg_enable_websocket_server: false
        fedmsg_websocket_port: 9919
        fedmsg_status_directory: /var/run/fedmsg/status
        fedmsg_post_init_sleep: 1
        # httpd role vars
        httpd_public: false
        pki_hostname: localhost
verifier:
  name: ansible
scenario:
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
