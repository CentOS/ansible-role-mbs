---
- name: Install mbs-backend packages
  yum:
    name:
      - module-build-service
      - python3-stevedore
      - python3-psycopg2
      - python3-vine < 5.0.0
      - python3-pungi >= 4.2.3
      - python3-qpid-proton
    state: present
    update_cache: true
  notify:
    - Restart apache
    - Restart fedmsg-hub

- name: Kill development configs
  file:
    path: /etc/fedmsg.d/{{ item }}
    state: absent
  with_items:
    - module_build_service.py
    - mbs-logging.py
  notify:
    - Restart apache
    - Restart fedmsg-hub

- name: Ensure log dir exists
  file:
    path: "{{ mbs_config_log_file | dirname }}"
    mode: 0777
    state: directory
  when: mbs_config_log_backend == 'file'

- name: copy app configuration
  template:
    src: mbs/config.py.j2
    dest: /etc/module-build-service/config.py
    owner: root
    group: fedmsg
    mode: 0644
  notify:
    - Restart apache
    - Restart fedmsg-hub

- name: copy koji configuration
  template:
    src: mbs/koji.conf.j2
    dest: /etc/module-build-service/koji.conf
    owner: root
    group: fedmsg
    mode: 0644
  notify:
    - Restart fedmsg-hub

- name: copy fedmsg configuration
  template:
    src: mbs/{{ item }}.j2
    dest: /etc/fedmsg.d/{{ item }}
    owner: root
    group: fedmsg
    mode: 0644
  with_items:
    - mbs-fedmsg.py
    - mbs-logging.py
    - logging.py
    - mbs-endpoints.py
    - endpoints.py
    - relay.py
  notify:
    - Restart apache
    - Restart fedmsg-hub

- name: create /var/cache/fedmsg/ directory for krb ccache
  file:
    path: /var/cache/fedmsg/
    state: directory
    owner: fedmsg
    group: fedmsg
    mode: 0750
  
- name: Add the systemd service files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - src: mbs/mbs-worker@.service.j2
      dest: /etc/systemd/system/mbs-worker@.service
    - src: mbs/mbs-poller.service.j2
      dest: /etc/systemd/system/mbs-poller.service
  notify:
    - Restart mbs poller
    - Restart mbs workers

- name: Enable the MBS workers
  systemd:
    name: "mbs-worker@{{ item }}"
    daemon_reload: yes
    enabled: yes
    state: started
  with_sequence: start=0 end={{ mbs_num_workers - 1 }}
  
- name: Start and enable mbs-poller service
  systemd:
    name: mbs-poller
    enabled: yes
    state: started
  
- name: Populate the service facts to detect if there are MBS workers to disable
  service_facts: {}

- name: Disable any extra MBS workers
  systemd:
    name: "mbs-worker@{{ worker_num }}"
    enabled: no
    state: stopped
  with_items: "{{ ansible_facts.services | select('match', 'mbs-worker@\\d+.service') | list }}"
  vars:
    worker_num: "{{ item | regex_search('\\d+') }}"
  when: (worker_num | int) >= mbs_num_workers
  
- name: create /etc/module-build-service/default-modules directory
  file:
    path: /etc/module-build-service/default-modules
    state: directory
    owner: root
    group: root
    mode: 0775
  
- name: Upgrade database
  command: /usr/bin/mbs-manager db upgrade
  when: mbs_upgrade_db
  register: mbs_db_output
  changed_when: "'Running upgrade' in mbs_db_output.stdout"
  failed_when: mbs_db_output.rc != 0

- block:
    - name: Import default modules
      copy:
          src: "{{ item }}"
          dest: /etc/module-build-service/default-modules
      with_fileglob:
        - "{{ mbs_default_modules_dir }}/*.yaml"
    - find:
        paths: /etc/module-build-service/default-modules/*.yaml
      register: default_modules
    - shell: /usr/bin/mbs-manager import_module {{ item }}
      with_items: "{{ default_modules.files }}"
  when: mbs_import_default_modules
