---
- name: Configuring httpd
  ansible.builtin.include_role:
    name: httpd

- ansible.builtin.include_role:
    name: httpd
  vars:
    - httpd_tls: "{{ mbs_frontend_https_enabled | bool }}"
 
- ansible.builtin.include_role:
    name: httpd
    tasks_from: pki-tls
  vars:
    pki_hostname: "{{ mbs_frontend_host }}"
  when: mbs_frontend_https_enabled | bool
  tags:
    - pki
    - tls
    - certs

- name: Install mbs-frontend packages
  ansible.builtin.yum:
    name:
      - python3-mod_wsgi
      - module-build-service
      - mod_auth_gssapi
    state: installed
  notify:
    - Restart apache

- name: Copy mbs httpd config
  ansible.builtin.template:
    src: "mbs/mbs.conf.j2"
    dest: "/etc/httpd/conf.d/mbs.conf"
    owner: apache
    group: apache
    mode: 0644
  notify:
    - Restart apache

- name: Ensure we have proper httpd keytab
  copy:
    src: "{{ pkistore }}/krb5/{{ mbs_frontend_krb_keytab }}"
    dest: "/etc/httpd/conf.d/{{ mbs_frontend_krb_keytab }}"
    owner: apache
  when: (mbs_config_no_auth | bool) == False

- name: Ensure /usr/share/mbs folder exists
  ansible.builtin.file:
    path: /usr/share/mbs/
    state: directory
  
- name: Copy custom wsgi file
  ansible.builtin.template:
    src: mbs/mbs.wsgi.j2
    dest: /usr/share/mbs/mbs.wsgi
    mode: 0644
  notify:
    - Restart apache

- name: Ensure selinux lets httpd talk to postgres, memcached, and mail
  ansible.posix.seboolean:
    name: "{{ item }}"
    state: true
    persistent: true
  with_items:
    - httpd_can_network_connect_db
    - httpd_can_network_memcache
    - httpd_can_network_connect
    - httpd_can_sendmail
