from os import path

# FIXME: workaround for this moment till confdir, dbdir (installdir etc.) are
# declared properly somewhere/somehow
confdir = path.abspath(path.dirname(__file__))
# use parent dir as dbdir else fallback to current dir
dbdir = path.abspath(path.join(confdir, '..')) if confdir.endswith('conf') \
        else confdir


class BaseConfiguration(object):
    DEBUG = {{ mbs_config_debug | bool }}
    # Make this random (used to generate session keys)
    SECRET_KEY = '{{ mbs_config_secret_key }}'
    SQLALCHEMY_DATABASE_URI = '{{ mbs_config_database_url }}'
    SQLALCHEMY_TRACK_MODIFICATIONS = True
    # Where we should run when running "manage.py runssl" directly.
    HOST = '0.0.0.0'
    PORT = 5000

    # Global network-related values, in seconds
    NET_TIMEOUT = 120
    NET_RETRY_INTERVAL = 30

    SYSTEM = '{{ mbs_config_system }}'
    MESSAGING = '{{ mbs_config_messaging }}'  # or amq
    MESSAGING_TOPIC_PREFIX = ['{{ mbs_config_messaging_topic_prefix }}']
    KOJI_CONFIG = '{{ mbs_config_koji_file }}'
    KOJI_PROFILE = '{{ mbs_config_koji_profile }}'
    ARCHES = {{ mbs_config_arches }}
    KOJI_PROXYUSER = {{ mbs_config_koji_proxy_user | bool }}
    KOJI_REPOSITORY_URL = '{{ mbs_config_koji_repository_url }}'
    COPR_CONFIG = '{{ mbs_config_copr_file }}'
    PDC_URL = '{{ mbs_config_pdc_url }}'
    PDC_INSECURE = {{ mbs_config_pdc_insure | bool }}
    PDC_DEVELOP = {{ mbs_config_pdc_develop | bool }}
    SCMURLS = {{ mbs_config_scm_urls }}

    # How often should we resort to polling, in seconds
    # Set to zero to disable polling
    POLLING_INTERVAL = {{ mbs_config_polling_interval }}

    RPMS_DEFAULT_REPOSITORY = '{{ mbs_config_default_repository_url }}'
    RPMS_ALLOW_REPOSITORY = {{ mbs_config_allow_rpm_repository | bool }}
    RPMS_DEFAULT_CACHE = '{{ mbs_config_rpm_default_cache_url }}'
    RPMS_ALLOW_CACHE = {{ mbs_config_rpm_allow_cache | bool }}

    MODULES_DEFAULT_REPOSITORY = '{{ mbs_config_modules_repository_url }}'
    MODULES_ALLOW_REPOSITORY = {{ mbs_config_modules_allow_repository | bool }}

    # Available backends are: console, file, journal.
    LOG_BACKEND = '{{ mbs_config_log_backend }}'

    # Path to log file when LOG_BACKEND is set to "file".
{% if mbs_config_log_backend == 'file' %}
    LOG_FILE = '{{ mbs_config_log_file }}'
{% endif %}

    # Available log levels are: debug, info, warn, error.
    LOG_LEVEL = '{{ mbs_config_log_level }}'

    # Settings for Kerberos
    KRB_KEYTAB = '{{ mbs_config_krb_keytab }}'
    KRB_PRINCIPAL = '{{ mbs_config_krb_principal }}'
    KRB_CCACHE = '{{ mbs_config_krb_cache }}'

    # AMQ prefixed variables are required only while using 'amq' as messaging backend
    # Addresses to listen to
{% if mbs_config_messaging == 'amq' %}
    AMQ_RECV_ADDRESSES = {{ mbs_config_amq_recv_addreses }}
    # Address for sending messages
    AMQ_DEST_ADDRESS = '{{ mbs_config_amq_dest_address }}'
    AMQ_CERT_FILE = '{{ mbs_config_amq_cert_file }}'
    AMQ_PRIVATE_KEY_FILE = '{{ mbs_config_amq_key_file }}'
    AMQ_TRUSTED_CERT_FILE = '{{ mbs_config_amq_ca_file }}'
{% endif %}


class ProdConfiguration(BaseConfiguration):
    # These groups are allowed to submit builds.
    ALLOWED_GROUPS = {{ mbs_config_allowed_groups }} # https://pagure.io/fesco/issue/1763

    # These groups are allowed to cancel the builds of other users.
    ADMIN_GROUPS = {{ mbs_config_admin_groups }}

    REBUILD_STRATEGY = '{{ mbs_config_rebuild_strategy }}'
    REBUILD_STRATEGY_ALLOW_OVERRIDE = {{ mbs_config_rebuild_strategy_override | bool }}

    # Our per-build logs for the koji-content generator go here.
    # CG imports are controlled by KOJI_ENABLE_CONTENT_GENERATOR
    BUILD_LOGS_DIR = '{{ mbs_config_logs_build_dir }}'

    BASE_MODULE_ARCHES = {{ mbs_config_base_module_arches }}

    RESOLVER = '{{ mbs_config_resolver }}'

    # Made possible by https://pagure.io/releng/issue/6799
    KOJI_ENABLE_CONTENT_GENERATOR = {{ mbs_config_content_generator | bool }}

    # See https://pagure.io/releng/issue/7012
    BASE_MODULE_NAMES = set({{ mbs_config_base_module_names }})
    KOJI_CG_BUILD_TAG_TEMPLATE = "{}-{{ mbs_config_koji_build_tag }}"
    KOJI_CG_DEFAULT_BUILD_TAG = "{{ mbs_config_koji_build_tag }}"

    # This is a whitelist of prefixes of koji tags we're allowed to manipulate
    KOJI_TAG_PREFIXES = {{ mbs_config_koji_tag_prefixes }}

    # Extra options set for newly created Koji tags
    KOJI_TAG_EXTRA_OPTS = {{ mbs_config_koji_tag_extra_opts }}

    # If this is too long, we could change it to 'fm_' some day.
    DEFAULT_DIST_TAG_PREFIX = '{{ mbs_config_dist_tag_prefix }}'

    # Delete module-* targets one hour after build
    KOJI_TARGET_DELETE_TIME = {{ mbs_config_koji_delete_time }}

    # These aren't really secret.
    OIDC_CLIENT_SECRETS = path.join(confdir, 'client_secrets.json')
    OIDC_REQUIRED_SCOPE = 'https://mbs.fedoraproject.org/oidc/submit-build'

    # yes, we want everyone to authenticate
    NO_AUTH = {{ mbs_config_no_auth | bool }}  # Obviously.

    # Don't let people submit yaml directly.  it has to come from dist-git
    YAML_SUBMIT_ALLOWED = {{ mbs_config_yaml_allowed | bool }}

    # Relative Koji task priority (0 means default priority of 20).
    KOJI_BUILD_PRIORITY = {{ mbs_config_build_priority }}

    # Check branch EOL before building.  Block EOL modules from building.
    # https://pagure.io/fm-orchestrator/issue/960
    # Because of https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/KGXBMTUR72FHQEG7IBHDPPX276QHSD2I/#MFT5SAWPKMCNLKAWEJFCFIVX5GJ7RBSP
    # we decided to hold on to this and ask the maintainers to create a
    # releng ticket to retire their modules.
    CHECK_FOR_EOL = {{ mbs_config_eol_check | bool }} 

    # Koji Content Generator "-devel" modules aren't used in Fedora, so we can just disable them
    KOJI_CG_DEVEL_MODULE = {{ mbs_config_koji_devel_module | bool }}

    MODULES_ALLOW_SCRATCH = {{ mbs_config_modules_allow_scratch | bool }}

    # By default, MBS allows buildrequiring only modules built against
    # compatible version of platform base module. By compatible, we mean
    # less or equal minor number of "stream_version". For example, when building module
    # against platform:f30, it wouldn't be possible to buildrequire a module
    # built against platform:f29. This is not intended behaviour in Fedora
    # and therefore we want to turn this feature off.
    ALLOW_ONLY_COMPATIBLE_BASE_MODULES = {{ mbs_config_modules_only_compatible | bool }}

